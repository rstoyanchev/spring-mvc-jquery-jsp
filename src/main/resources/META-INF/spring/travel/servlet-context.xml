<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Configures the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Configures a handler for serving static resources by forwarding to the Servlet container's default Servlet. -->
	<default-servlet-handler />
	
	<!-- Maps view names to JSP pages automatically decorated with template-->
	<!-- With HTTP parameter "htmlFormat=nolayout" no decoration is performed (default is "ajax=true") -->
	<!-- 
	Note by: jorge.simao@glintt.com, jsimao71@gmail.com, jsimao@jpalace.org, admin@helloapp.org
	Possible future alternative packagings if/when JspTemplateViewResolver is added/released with Spring 3.2:
	 org.springframework.web.servlet.view.JspTemplateViewResolver (along side with parent class InternalResourceViewResolver)
	 org.springframework.ext.web.servlet.view.JspTemplateViewResolver (extension/experimental status)
	 org.springframework.rd.web.servlet.view.JspTemplateViewResolver (R&D status)
	 org.springsource.research.web.servlet.view.JspTemplateViewResolver (yet another R&D status)
	 -->

	<beans:bean id="viewResolver" class="org.helloapp.spring.web.view.jsp.JspTemplateViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/"/>
		<beans:property name="suffix" value=".jsp"/>
		<beans:property name="templateName" value="common/standard"/>
		<beans:property name="layoutParam" value="htmlFormat"/>
		<beans:property name="layoutParamValue" value="nolayout"/>
	</beans:bean>

	<!-- Configures transaction management around @Transactional components -->
	<tx:annotation-driven />

	<!-- Imports the application controllers that process client requests -->
	<beans:import resource="controllers.xml" />

</beans:beans>
